#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\options titlepage
\use_default_options true
\begin_modules
enumitem
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Students Management System
\end_layout

\begin_layout Subtitle
Proccess accelerator for educational centers
\end_layout

\begin_layout Subtitle
Juan Antonio Fernández Sánchez
\end_layout

\begin_layout Minisec
Abstract
\end_layout

\begin_layout Standard
Nowadays technology is everyplace, but a lot of processes are supported
 on paper yet.
 In spite of the cost of it, this way make imposible the effienct analysis
 ot amounts of data, that actually have a enormous potencially but aren't
 used because the people that manage this haven't appropieate tools or knowlegme
nt about it.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Minisec
Responsability
\end_layout

\begin_layout Standard
Everything that is writed and explained here comes from opinion and own
 experience of the author and don't represent a correct or exactly way that
 do things.
 All decisions can be discussed and obviously it may not represent the best
 decision.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
What about it?
\end_layout

\begin_layout Standard
The idea behind of the develop ot this software isn't only to do a good
 tool for educational centers, is also an excuse to research and learn about
 a lot of technologies and patterns but above all it's about how to do software,
 clean, simple and easily readable sotware.
\end_layout

\begin_layout Standard
This software has been thinked to help a lot of teachers in their work,
 but which is exactly the problem? And how it will help? 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Until a few years ago the digitalization of education was something imposible
 to think, the cost of equipments and the digital illiteracy did imposible
 to think in to do things of another way.
 The only computers that we could see was inside the 'Computer room', where
 students learnd to use a simple text processor, received a simple notions
 of internet of websites, mail system or storage devices, isn't bad to start,
 but we don't talk about this.
 And what about teachers? Maybe a few of computers in some rooms or office
 allow them send mails, maybe build a simple website or offers some resource
 to the students (in the better case).
 As we can imagine, the paper was the mainly support of all about management
 of the center.
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If we think about proccesses in a scholar center we can't imagine the amount
 of paper that is necesary to registry all about students, teachers, subjects,
 relationships between them and the rest of work.
 And the worst of this is that every three months and every year the most
 of this documents, papers, records, etc, need be redo, because the mayority
 of this relations will change and will be necesary record all.
\end_layout

\begin_layout Standard
Can you imagine the amout of papers, time and efforce is necesary to do
 this? We will talk more about this after.
\end_layout

\begin_layout Standard
So now all peple have a smarphone, the hardware is really cheap (laptops,
 tablets, etc...) and open a website for a inexperted person is very easy,
 and almos free, in some clicks.
 There are alot of system and tools about e-learning like Moodle, Chamilio
 , etc that allows manage a lot of thigs like classroom, activities, exams,
 ect...
 all had been listen somethimes about it but they have an specific domain
 and are builded to an specific way.
\end_layout

\begin_layout Standard
This area is more or less knowled for the mayority of new teachers and schooll
 stuff.
 Many center uses some tools like this to do a lot of tasks, but in spite
 of it, there are another a lo of tool much very heavy that is following
 hand made.
\end_layout

\begin_layout Section
Why to build a new tool?
\end_layout

\begin_layout Standard
But is really necesary build to zero a new tool for do this.
 Well, if we want, could reuse some preexisintg tool, maybe adding some
 module to do all things that we detect that fault, but this present a lot
 of problem, that are closely related with the architecture and liceses
 of this software.
 Because of this, is putted a lot of effor in this project in the opennes
 of code and architecture, beause this is that make possible that the platform
 can be change, evolutionate in many forks and feedback herself.
\end_layout

\begin_layout Section
Domain of the problem
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The idea to build SMS arises from the need of a managment system for a specific
 educational center in Granada, that mainly speed up all their internall
 management, avoid the spend of printed paper and save huge amounts of time.
 Beside this they want a system that was helpful for making better management
 decisions, in marking paths for future improvements.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset

 To achieve that the system would need as core a subsystem of relationships
 managment, teachers that imparts class to students, students that are enrollmen
ts in subjects and in groups or courses, and a long etcetera.
 This only as the base of the system, because with this would only be modeled
 the kind of relations that the center have.
 A part of this and like the minimal requirements the center need that the
 sistem provide a simple way to do their most heavy and paper, time and
 money cost, the attendance contros (we can start to see some requirements
 that the system would have).
 Appart of this but related they need a system to save marks related with
 students and disciplinary notes.
 Only this three things done digitally may be a small internal revolution.
\end_layout

\begin_layout Section
The cost of non-digitalization
\end_layout

\begin_layout Standard
here will be the exlanation of the use of papper and time of a teacher.
\end_layout

\begin_layout Section
State of Art 
\end_layout

\begin_layout Standard
As part of the research process has been analyses some aplications that
 (although isn't a directly competition) represent the actual state of art
 about the kind of sofware we are talking about.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="8">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
App
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
g
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Designe Decisions 
\end_layout

\begin_layout Standard
Nowadays we can build almost any kind of software with a lot of differents
 language from which to choose, but as if that were not enough there are
 also a lot of architectures that are possible to follow, and beside of
 this it will necesary choose where deploy our software, or how doc it,
 or how magane our work team, etc.
 A lot of options that it will necesary to choose and that can make the
 difference between the success or failure of our project.
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 So, what about of these decisions in this project? Take a look about it.
 
\end_layout

\begin_layout Section
Architecture
\end_layout

\begin_layout Subsection
Why microservices?
\end_layout

\begin_layout Standard
Much more that the trend in the develop of apps, all of change of paradigm
 inspired in distributed system, now over http and focussed (especially)
 in web apps as a consequence of the multiple benefits to this kind of sofwate.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Language agnostic, scalable, size ajustables, independently, the system
 splited in litle pieces with this boundaries ...
 
\end_layout

\begin_layout Subsection
Why polyglot database?
\end_layout

\begin_layout Standard
With the mircroservices approach the system will be some very differents
 database to do some diferents things.
 So, in general we can see our backend like a black box when the data persists
 in a polyglot database.
 That means that the data is save in differents ways, using diferetns formats
 and diferents driver to manage this.
 There are a group of data that it need saved with certain relations, due
 to its nature, so a relational database seem perfect to do this, but this
 kind of databases (like MySQL) can been slowly or too heavy for other tasks
 of kind of processes, like data analysis.
\end_layout

\begin_layout Subsection
Repository Strategie
\end_layout

\begin_layout Section
Languages and frameworks
\end_layout

\begin_layout Section
Deploy scenarios
\end_layout

\begin_layout Standard
Google App Engine, Amazon Web Services, Microsoft Azure, IBM BlueMix, Heroku,
 CloudFoundry, etc...
 
\end_layout

\begin_layout Standard
Realizar comparativa y justificar muy bien la elección.
\end_layout

\begin_layout Section
Documentation
\end_layout

\begin_layout Section
Methodology and planification.
\end_layout

\begin_layout Standard
Elección de metodologías ágiles basadas en Scrum para la gestión del equipo
 y en historias de usuario para el modelado del sistema.
\end_layout

\begin_layout Subsubsection
Ágil, adaptación al cambio.
\end_layout

\begin_layout Standard
Como se ha visto, el enfoque de este desarrollo es completamente ágil, esto
 quiere decir que desde su inicio hasta su fin el proceso de obtención de
 requisitos y diseño de la arquitectura se basa en un bucle de infinitas
 iteraciones donde el cliente añade aspectos a la aplicación que esta diseñadad
 para ser capaz no solo de aceptar esos cambios sino de desarlos para la
 mayor satisfacción del cliente, como rezan los principios ágiles del desarrollo.
 Debido a esto, los capitulos 3 y 4 del presente documento serían imposibles
 de redactar de forma estática como resultado final de un estudio previo,
 pues deben ser entendidos como una evolución constante entre el cliente
 y el equipo de desarrollo, por eso se hace especial incapié en la sección
 evolución de cada uno de ellos.
 
\end_layout

\begin_layout Section
License
\end_layout

\begin_layout Subsection
Licencia y enfoque
\end_layout

\begin_layout Chapter
Architecture Modeling
\end_layout

\begin_layout Standard
En base a los requisitos funcionales del sistema, se ha modelado la arquitectura
 en base a ciertos subsistemas o microservicios que despliegan la aplicación
 haciendo frente a todos sus requisitos de la manera más optima posible.
 La decisión de usar ms se justifica en el capítulo 2
\end_layout

\begin_layout Section
General Patterns
\end_layout

\begin_layout Standard
Explica los patrones más comunes en el diseño de aplicaciones basadas en
 microservicios, entre ellos el basado en una API GATEWAY que es el adoptado
 por nosotros.
\end_layout

\begin_layout Section
Evolution
\end_layout

\begin_layout Standard
En muchas ocasiones lo más interesante de un desarrollo, la fase propia
 de evolución, pasa desapercibida cuando se entrega un producto final.
 En este caso se pierden las conclusiones y decisiones tomadas por el equipo
 de desarrollo que les han llevado a toma una u otra decisión.
 Por eso se intentará reflejar lo más fielmente posible como ha sido el
 proceso que ha llevado el sistema al su fase de entrega final.
\end_layout

\begin_layout Subsection
First Phase
\end_layout

\begin_layout Standard
Servicios básicos y no demasiado estandard
\end_layout

\begin_layout Subsection
Second Phase
\end_layout

\begin_layout Standard
Los microservicios básicos
\end_layout

\begin_layout Subsection
Third Phase
\end_layout

\begin_layout Standard
La arquitectura final
\end_layout

\begin_layout Subsection
Not closed final state
\end_layout

\begin_layout Standard
Estado final pero por supuesto no cerrado al cambio ni a la ampliación,
 con los servicios que faltarían o que no estan aún externalizados.
\end_layout

\begin_layout Chapter
Core
\end_layout

\begin_layout Standard
Talking about SPIKES in all sections that is needed, como UIKIT en la UI,
 endpoints en la APIG, ndb, mongo, etc, etc...
\end_layout

\begin_layout Section
APIGmS
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
As has been comment before, the pattern choose to this microservices based
 app architecture is API Gateway, this offers a lot of benefits, but also
 some drawbacks.
 The mainly idea is to have a service working like as the gateway of the
 service, so the backend becomes in a black box where all inside is behind
 of this service, transparent to the customers of this.
\end_layout

\begin_layout Standard
So, this service works basically like a dispatcher, it receives the calls
 from user interface and decide where send the request.
 
\end_layout

\begin_layout Subsection
Spikes
\end_layout

\begin_layout Standard
To build this services was tryed some diferents approach.
 Like almost in every modules, the same functionality can be writed for
 may ways.
 So, in this case specially (a service thinkied to run in GAE) the platform
 offer us a speciall way to do this, better than standard, according to
 them.
 
\end_layout

\begin_layout Subsection
Testing and docs
\end_layout

\begin_layout Standard
As is a dispatcher, the testing strategie isn't like others.
 Don't have sense write (be automatic or not) a lot of test that redo the
 same checks only using another port (in local) or url (in production).
 To do this easier, a simple strategie is execute the same test that are
 executed over the microservices isolated from the APIGmS, exactly the same.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset

 How do this? The tests writed uses a url that included a port of execution
 (because all servies using the same url in local) so if we want to know
 if the response is equal from APIGmS we only need change the port of execution.
 So, for example if the tests suite to serviceA runing over localhost:8003
 the test that check this service throught APIGmS (must be exactly the same
 behaviour) will use localhost:8001.
\end_layout

\begin_layout Standard
The tool used to do all test (except for the UI) is the python framework
 PyTest allow easily, writing scenarios.
 This technique allow repeat all test first over the service and after from
 the distpacher (showing all result as well).
\end_layout

\begin_layout Standard
Besides of this, the service can have functions of modules that need be
 tested independently, these need a specific tests.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigskip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the other had with docs something similar happens, don't have sense write
 a doc defining the behaviour of all sections of api gateway if this doc
 already exists in each service.
 It's redundant and complex to mantain.
 Because of this a simple approach is link the docs to services docs, so
 the task of write it relegate to them.
 
\end_layout

\begin_layout Standard
As is saided the tool Sphinx is used to build the doc of the service.
 That basically inspect the code files mixing this with all the files that
 we write (pure doc) to show this as a web based documetnation (easy to
 read and understand).
\end_layout

\begin_layout Section
TDBmS
\end_layout

\begin_layout Subsection
Introducción
\end_layout

\begin_layout Standard
This mService 
\end_layout

\begin_layout Standard
El microservicio de Base de Datos acota el dominio de la gestión docente
 dentro del sistema, quizás se le cambie el nombre a TmS teachingMicroService.
 
\end_layout

\begin_layout Standard
A través de este microservicio podemos realizar todas las acciones relativas
 a.
\end_layout

\begin_layout Standard
Este microservicio se basa en una base de datos.
\end_layout

\begin_layout Subsection
Problemas y diseño.
\end_layout

\begin_layout Standard
En el proceso de diseño con la lógica de MySQL se han encontrado varias
 problems para los que se ha intentado dar la mejor solución posible.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename dbms-ER.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
The design follow some details that the domain presents, that is related
 (at least the more significative) below:
\end_layout

\begin_layout Subsection
Item's metadata.
\end_layout

\begin_layout Subsection
Input / Output convention
\end_layout

\begin_layout Standard
All in JSON except the values with NULL in the input and in the output.
\end_layout

\begin_layout Subsection
How to save the deleted items.
\end_layout

\begin_layout Standard
In the way to develop the microservice we have the question, we want to
 save the deleted items? For one hand we could want to know 
\end_layout

\begin_layout Subsection
Optional subjects, the 
\begin_inset Quotes eld
\end_inset

class
\begin_inset Quotes erd
\end_inset

 Table.
\end_layout

\begin_layout Standard
In the domain of the problem can be exists optative subjects and is needed
 search a way to implement this because has a specific details that aren't
 like the rest.
\end_layout

\begin_layout Subsubsection
The details.
\end_layout

\begin_layout Standard
The studies plan forces in certain courses to select one or several optional
 subjects.
 For example, if a student has enrollment in 2ºESO (independently of the
 group, A, B...) the law and consequently the studies plan force to the student
 to choose between some optional subjects.
 So, maybe this subjects exists only in this optional case as 
\begin_inset Quotes eld
\end_inset

 rare subjects
\begin_inset Quotes erd
\end_inset

 but in other cases this are only normal subjects but that in this course
 are offer like optional.
\end_layout

\begin_layout Standard
A simple example of this is French subject, it in some courses like 3ESO
 and 4ESO is obligatory but it in Bachiller (the upper level) is optional
 because the students can be select if they want make the final exam with
 this second language or select another like English or Greek or Latin p.e.
 
\end_layout

\begin_layout Standard
To obtain this we decide develop a simple solution without change the original
 database logic schema.
 So, how we have an entity that save the classes and it have three attributes,
 course, word and level mainly we going to add three more to this special
 cases, optative, groupNumber and subgroupNumber.
 Like this special cases haven't word param when they have value word don't
 have and when the item have word (A, B, C...) then don't have this special
 attributes.
 
\end_layout

\begin_layout Standard
Maybe this don't be the best solution, but is a simple in the point of develop.
 
\end_layout

\begin_layout Standard
Obviously like we can't have two autoincrement values in the same table
 definition in MySQL we will need control this programatically, but is something
 that we can assume to get our goal easily.
 
\end_layout

\begin_layout Standard
Problema:
\end_layout

\begin_layout Standard
La misma ventaja que nos ofrece UNIQUE para el caso de los eliminados ahora
 nos muerde aquí.
 Mientras que allí beneficiaba porque esta clausula no incluye a los item
 que tengan campos a null y permite que no de conflicto en este caso si
 insertamos un grupo optativo obviamente deberá tener el camo word a null
 y si es así podemos tener exactamente dos grupos iguales sinque de conflicto.
\end_layout

\begin_layout Standard
course 
\end_layout

\begin_layout Standard
1 <null> ESO 1 1 1 0
\end_layout

\begin_layout Standard
1 <null> ESO 1 1 1 0
\end_layout

\begin_layout Standard
Sin dar conflicto, lo que no puede ser.
 
\end_layout

\begin_layout Standard
Además de esto, todo lo que complica la gestión de cuando se 
\end_layout

\begin_layout Standard
está a null o no para le resto de los procedimientos.
\end_layout

\begin_layout Standard
Por esta razón decidimos usar el mismo campo word, con una nomenclatura
 especial, ya que no se va a ser usada para los grupos generales que indique
 que se trata de un grupo optativo y además especifique el grupo y el subgrupo,
 en concreto:
\end_layout

\begin_layout Standard
OPT_n_m
\end_layout

\begin_layout Standard
donde n será el número del grupo (que habrá que incrementar prograticamente
 a mano) y m el número del subgrupo que tambińe habrá que incrementar a
 mano en caso de que se creen más.
\end_layout

\begin_layout Standard
Esto siempre a falta de un mejor solución que se adopte en iteraciones posterior
es.
\end_layout

\begin_layout Standard
Y en la api nosotros siempre preferimos explícito a implicito.
\end_layout

\begin_layout Standard
Requisitos:
\end_layout

\begin_layout Enumerate
Ya que todo se controla desde mysql pero no existe forma de hacerlo automático
 vamos a crear unos disparadores para la insercción y la eliminación para
 mantener la consistencia de los datos.
 Cuando se introduce un nuevo grupo optativo se debe comprobar que existe
 el anterior tanto en grupo como en subgrupo para que no exista el subgrupo
 4 sin el 3 o el dos.
 De la misma manera no se podrán eliminar un grupo 4 si el 2 aún existe.
\end_layout

\begin_layout Subsubsection
API definition
\end_layout

\begin_layout Standard
@app.route('/entities/<string:kind>', methods=['POST'])
\end_layout

\begin_layout Standard
Para realizar la introducción de un estudiante al sistema usamos 
\end_layout

\begin_layout Standard
el re.
\end_layout

\begin_layout Standard
No podemos introducir un usuario que no tenga datos, al menos
\end_layout

\begin_layout Standard
deberá pasarse el dato nombre que es úniquo mínimo que debe
\end_layout

\begin_layout Standard
existir para el tipo alumno.
\end_layout

\begin_layout Standard
Cuando se pide una lista de elementos y la petición se realiza correctamente
 pero no se devuelve nada porque no existen items de ese recurso se envía
 un 204 Success without content.
\end_layout

\begin_layout Standard
Importante: Muchos de los detalles de control de consistencia no pueden
 relegarse a la UI, ya que aunque en ella no se deben permitir ciertas acciones
 por la lógica del sistema, la api no debe permitir su realización aunque
 se haga de forma manual sin los conectores de la UI.
\end_layout

\begin_layout Standard
Por eso no solo la seguridad sino el control de la consistencia debe
\end_layout

\begin_layout Standard
estar presente de la mejor forma posible en todas las acciones que contra
 esta un usuario puede hacer.
\end_layout

\begin_layout Subsubsection
User histories
\end_layout

\begin_layout Standard
I like
\end_layout

\begin_layout Section
SCmS
\end_layout

\begin_layout Subsection
About
\end_layout

\begin_layout Standard
Students Control micro Service or SCmS is the service that provide the resources
 to make posible tasks like ....
 .
\end_layout

\begin_layout Standard
All of this working independently to the rest of the system with her own
 database.
\end_layout

\begin_layout Subsection
First Iteration
\end_layout

\begin_layout Standard
Like in every scenarios we can divide the domain of the problem in some
 services, but in this
\end_layout

\begin_layout Standard
case and like first iteration it has been decided leave toguether all the
 issues thar are related with the students controls.
\end_layout

\begin_layout Subsection
Designe
\end_layout

\begin_layout Subsubsection
Arquitecture
\end_layout

\begin_layout Subsubsection
Languages and tools
\end_layout

\begin_layout Subsection
Testing strategy
\end_layout

\begin_layout Subsection
Deploy
\end_layout

\begin_layout Section
AmS
\end_layout

\begin_layout Subsection
About
\end_layout

\begin_layout Standard
Analytics micro Service or AmS.
\end_layout

\begin_layout Subsection
First Iteration
\end_layout

\begin_layout Subsection
Designe
\end_layout

\begin_layout Subsubsection
Arquitecture
\end_layout

\begin_layout Subsubsection
Languages and tools
\end_layout

\begin_layout Subsection
Testing strategy
\end_layout

\begin_layout Subsection
Deploy
\end_layout

\begin_layout Section
UImS
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Subsection
UX basic strategy issue
\end_layout

\begin_layout Standard
Explicación del problema.
\end_layout

\begin_layout Subsubsection
All in one
\end_layout

\begin_layout Standard
Cuando todo se trata como un boque al que se le procesan las diferencias.
\end_layout

\begin_layout Subsubsection
All live mode
\end_layout

\begin_layout Standard
Donde por cada acción se realiza una llamada a la api y no existen los botones
 guardar, incluso cuando se escribe texto en los campos se está realizando
 el guardado.
\end_layout

\begin_layout Subsubsection
Mixed mode
\end_layout

\begin_layout Standard
Donde la seccion de datos propios de la entidad se procesa de forma tradicional
 y las relaciones se actualizan conforme se manipulan.
 Esta es la que finalmente optamos por usar.
\end_layout

\begin_layout Section
External Services
\end_layout

\begin_layout Standard
Conclusiones de por qué se han usado ciertas cosas y por que no otras
\end_layout

\begin_layout Subsection
Pub / Sub pattern
\end_layout

\begin_layout Subsection
Firebase
\end_layout

\begin_layout Subsection
Third Party DataBases
\end_layout

\begin_layout Standard
Por que nos hemos quedado con las que usamos y porque no usamos otras.
\end_layout

\begin_layout Chapter
Future Plans
\end_layout

\begin_layout Section
Features
\end_layout

\begin_layout Section
Architecture
\end_layout

\begin_layout Standard
Image of all microservices in their final state
\end_layout

\begin_layout Section
Technologies
\end_layout

\begin_layout Chapter
Retrospective
\end_layout

\begin_layout Standard
Solo ahora que va acabando el proyecto es posible ver todos los problemas
 que se han tenido y la forma de ponerles solución de una forma más amplia,
 viendo donde se cometieron erroes y cuales han sido los beneficios y cuellos
 de botella del desarrollo del proyecto.
\end_layout

\begin_layout Section
DRY
\end_layout

\begin_layout Standard
Comentar algunas de las cosas en las que se ha caido, como el escribir cosas
 desde cero cuando habías soluciones o cosas parecidas ya hechas.
 
\end_layout

\begin_layout Standard
La validación de envíos en las apis, los ORMs, la documentación, el testing,
 etc, etc...
\end_layout

\begin_layout Section
KISS
\end_layout

\begin_layout Section
The heaven of frameworks
\end_layout

\begin_layout Standard
Existen un montón de frameworks distintos para hacer lo mismo, cada uno
 en su lenguaje, y cada uno con sus detalles.
 ahora que terminamos el proyecto, evaluamos los beneficios y problemas
 que hemos encontrado en unos y otros, atendiendo entre otras cosas a la
 demanda y uso d elos mismos, desde el número de oportunidades laborales,
 el número de preguntas en stackoverflow .
\end_layout

\begin_layout Section
Community
\end_layout

\begin_layout Standard
el contacto con la comunidad, debería de haber sido mucho mayor y previo,
 (comunidades profesionales) 
\end_layout

\begin_layout Section
The strategie
\end_layout

\begin_layout Standard
Los problemas de la planificación, las virtudes de hacer algo así, lo aprendido
 con las historias de usuario y como es muy dificil abordar un problema
 de este tamaño solo, la dificultad de encontrar colaboradores, etc, etc...
 
\end_layout

\begin_layout Section
DevOps and storms in the cloud
\end_layout

\begin_layout Standard
Conocimientos, lugares donde desplegar, infrastructura de google, los problemas
 que se han encontrado, como diferencia esto de un despliegue en otro sitio
 (en cuanto a curvas de aprendizaje).
\end_layout

\begin_layout Chapter
Resources 
\end_layout

\begin_layout Section
Articles
\end_layout

\begin_layout Enumerate
http://blog.zachbjornson.com/2015/12/29/cloud-storage-performance.html
\end_layout

\begin_layout Enumerate
http://googlecloudplatform.blogspot.com.es/2015/12/the-next-generation-of-managed-M
ySQL-offerings-on-Cloud-SQL.html
\end_layout

\begin_layout Section
Communities
\end_layout

\begin_layout Enumerate
https://plus.google.com/+googlecloudplatform/posts
\end_layout

\begin_layout Enumerate
https://plus.google.com/+AngularjsEspa%C3%B1ol/posts
\end_layout

\begin_layout Section
Technologies
\end_layout

\begin_layout Enumerate
https://material.angularjs.org/
\end_layout

\begin_layout Section
Books
\end_layout

\begin_layout Chapter
Acknowledgments
\end_layout

\begin_layout Itemize
Juan Julian Merelo
\end_layout

\begin_layout Itemize
Ignacio Zafra (The Cloud Gate)
\end_layout

\begin_layout Itemize
Alberto Guillen 
\end_layout

\begin_layout Itemize
Esteban Gomez Roldan (GDG Granada)
\end_layout

\begin_layout Itemize
Steve Judd (OpenCredo LTD)
\end_layout

\begin_layout Itemize
Victor Terrón (Google London)
\end_layout

\begin_layout Itemize
Nacho Coloma (Extrema Sistemas)
\end_layout

\begin_layout Itemize
José M.
 Rodríguez (Job&Talent)
\end_layout

\begin_layout Itemize
Al resto del equipo de ButterFlyDevs, Jose Antonio Gonzalez y Javier Perez
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "libros"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
